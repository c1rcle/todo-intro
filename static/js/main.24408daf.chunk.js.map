{"version":3,"sources":["context/AppContext.js","components/Dialog.js","components/Navigation.js","context/ItemContext.js","components/Task.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["AppContext","createContext","AppState","props","useState","dialogVisible","setDialogVisible","lists","setLists","Provider","value","addList","name","newId","length","id","removeList","filter","list","children","Dialog","appContext","useContext","setName","Modal","show","onHide","Header","closeButton","Title","Form","onSubmit","event","preventDefault","Body","Control","type","placeholder","onChange","e","target","Footer","Button","variant","onClick","Navigation","Navbar","bg","Container","Brand","className","Nav","ItemContext","ItemState","tasks","setTasks","addTask","content","checked","removeTask","task","checkTask","map","Task","itemContext","ListGroup","Item","Row","Col","xs","TodoItem","setContent","addTaskPressed","Card","as","InputGroup","Append","key","TodoList","lg","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24408daf.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppState = props => {\r\n  const [dialogVisible, setDialogVisible] = useState(false);\r\n  const [lists, setLists] = useState([]);\r\n\r\n  const addList = name => {\r\n    let newId = lists.length === 0 ? 0 : lists[lists.length - 1].id + 1;\r\n    setLists([...lists, { id: newId, name: name }]);\r\n  };\r\n\r\n  const removeList = id => {\r\n    setLists(lists.filter(list => list.id !== id));\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        dialogVisible,\r\n        lists,\r\n        setDialogVisible,\r\n        addList,\r\n        removeList\r\n      }}>\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppContext;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\nimport AppContext from '../context/AppContext';\r\n\r\nconst Dialog = () => {\r\n  const appContext = useContext(AppContext);\r\n  const { setDialogVisible, addList, dialogVisible } = appContext;\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  const addListPressed = event => {\r\n    event.preventDefault();\r\n    if (name !== '') addList(name);\r\n    setDialogVisible(false);\r\n    setName('');\r\n  };\r\n\r\n  return (\r\n    <Modal show={dialogVisible} onHide={() => setDialogVisible(false)}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>New todo list</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Form onSubmit={addListPressed}>\r\n        <Modal.Body>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Enter name'\r\n            value={name}\r\n            onChange={e => setName(e.target.value)}\r\n          />\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant='primary' type='submit'>\r\n            Create\r\n          </Button>\r\n          <Button variant='secondary' onClick={() => setDialogVisible(false)}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React, { useContext } from 'react';\r\nimport { Navbar, Button, Nav, Container } from 'react-bootstrap';\r\nimport AppContext from '../context/AppContext';\r\n\r\nconst Navigation = () => {\r\n  const appContext = useContext(AppContext);\r\n  const { setDialogVisible } = appContext;\r\n\r\n  return (\r\n    <Navbar variant='dark' bg='primary'>\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <i className='far fa-sticky-note' /> Todo list\r\n        </Navbar.Brand>\r\n        <Nav className='mr-auto'>\r\n          <Button variant='success' onClick={() => setDialogVisible(true)}>\r\n            Add\r\n          </Button>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { createContext, useState } from 'react';\r\n\r\nconst ItemContext = createContext();\r\n\r\nexport const ItemState = props => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const addTask = content => {\r\n    let newId = tasks.length === 0 ? 0 : tasks[tasks.length - 1].id + 1;\r\n    setTasks([...tasks, { id: newId, content: content, checked: false }]);\r\n  };\r\n\r\n  const removeTask = id => {\r\n    setTasks(tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const checkTask = (id, checked) => {\r\n    setTasks(\r\n      tasks.map(task => (task.id === id ? { ...task, checked: checked } : task))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ItemContext.Provider\r\n      value={{\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        checkTask\r\n      }}>\r\n      {props.children}\r\n    </ItemContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ItemContext;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport { ListGroup, Button, Row, Col } from 'react-bootstrap';\r\nimport ItemContext from '../context/ItemContext';\r\n\r\nconst Task = props => {\r\n  const itemContext = useContext(ItemContext);\r\n  const { checkTask, removeTask } = itemContext;\r\n  const { task } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      <ListGroup.Item>\r\n        <Row>\r\n          <Col xs='auto' className='ml-1 pr-0'>\r\n            <Button \r\n              variant={task.checked ? 'success' : 'outline-success'} \r\n              onClick={() => checkTask(task.id, !task.checked)}>\r\n              <i className={`fas fa-${task.checked ? 'check' : 'times'} fa-fw`} />\r\n            </Button>\r\n          </Col>\r\n          <Col className='m-auto trimText'>\r\n            {task.checked ? <div className='text-muted'>{task.content}</div> : task.content}\r\n          </Col>\r\n          <Col xs='auto' className='mr-1'>\r\n            <Button variant='danger' onClick={() => removeTask(task.id)}>\r\n              <i className={'fas fa-trash fa-fw'} />\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </ListGroup.Item>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { Fragment, useContext, useState } from 'react';\r\nimport {\r\n  Card,\r\n  Form,\r\n  ListGroup,\r\n  Button,\r\n  InputGroup,\r\n  Row,\r\n  Col\r\n} from 'react-bootstrap';\r\nimport Task from './Task';\r\nimport AppContext from '../context/AppContext';\r\nimport ItemContext from '../context/ItemContext';\r\n\r\nconst TodoItem = props => {\r\n  const appContext = useContext(AppContext);\r\n  const itemContext = useContext(ItemContext);\r\n\r\n  const { removeList } = appContext;\r\n  const { addTask, tasks } = itemContext;\r\n  const { id, name } = props;\r\n\r\n  const [content, setContent] = useState('');\r\n\r\n  const addTaskPressed = event => {\r\n    event.preventDefault();\r\n    if (content !== '') addTask(content);\r\n    setContent('');\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <Card.Header as='h5' className='bg-primary text-white'>\r\n          <Row>\r\n            <Col className='trimText'>{name}</Col>\r\n            <Col>\r\n              <button className='close' onClick={() => removeList(id)}>\r\n                ×\r\n              </button>\r\n            </Col>\r\n          </Row>\r\n        </Card.Header>\r\n\r\n        <Card.Body>\r\n          <Form onSubmit={addTaskPressed}>\r\n            <InputGroup>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter a new task'\r\n                value={content}\r\n                onChange={e => setContent(e.target.value)}\r\n              />\r\n              <InputGroup.Append>\r\n                <Button variant='success' onClick={addTaskPressed}>\r\n                  Add\r\n                </Button>\r\n              </InputGroup.Append>\r\n            </InputGroup>\r\n          </Form>\r\n        </Card.Body>\r\n\r\n        <ListGroup variant='flush'>\r\n          {tasks.map(task => (\r\n            <Task key={task.id} task={task} />\r\n          ))}\r\n        </ListGroup>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport AppContext from '../context/AppContext';\r\nimport { ItemState } from '../context/ItemContext';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoList = () => {\r\n  const appContext = useContext(AppContext);\r\n  const { lists } = appContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        {lists.map(list => (\r\n          <Col lg={4} className='form-group'>\r\n            <ItemState>\r\n              <TodoItem key={list.id} id={list.id} name={list.name} />\r\n            </ItemState>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport { AppState } from './context/AppContext';\nimport Dialog from './components/Dialog';\nimport Navigation from './components/Navigation';\nimport TodoList from './components/TodoList';\nimport { Container } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <AppState>\n      <Dialog />\n      <Navigation />\n      <Container className='my-3'>\n        <TodoList />\n      </Container>\n    </AppState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\nimport './styles/index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}