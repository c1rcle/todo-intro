{"version":3,"sources":["context/AppContext.js","components/Dialog.js","components/Navigation.js","context/ItemContext.js","components/Task.js","components/TodoItem.js","components/TodoList.js","App.js","index.js"],"names":["AppContext","createContext","AppState","props","useState","dialogVisible","setDialogVisible","lists","setLists","Provider","value","addList","name","newId","length","id","children","Dialog","appContext","useContext","setName","Modal","show","onHide","Header","closeButton","Title","Body","Form","Control","type","placeholder","onChange","e","target","Footer","Button","variant","onClick","Navigation","Navbar","bg","Container","Brand","className","Nav","ItemContext","ItemState","tasks","setTasks","addTask","content","checked","removeTask","filter","task","checkTask","map","Task","itemContext","ListGroup","Item","Row","Col","md","Check","align","TodoItem","setContent","Card","as","InputGroup","Append","key","TodoList","list","sm","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4b07f6d.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\r\n\r\nconst AppContext = createContext();\r\n\r\nexport const AppState = props => {\r\n  const [dialogVisible, setDialogVisible] = useState(false);\r\n  const [lists, setLists] = useState([]);\r\n\r\n  const addList = name => {\r\n    let newId = lists.length === 0 ? 0 : lists[lists.length - 1].id + 1;\r\n    setLists([...lists, { id: newId, name: name }]);\r\n  };\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        dialogVisible,\r\n        lists,\r\n        setDialogVisible,\r\n        addList\r\n      }}>\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppContext;\r\n","import React, { useContext, useState } from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\nimport AppContext from '../context/AppContext';\r\n\r\nconst Dialog = () => {\r\n  const appContext = useContext(AppContext);\r\n  const { setDialogVisible, addList, dialogVisible } = appContext;\r\n\r\n  const [name, setName] = useState('');\r\n\r\n  const addListPressed = () => {\r\n    if (name !== '') addList(name);\r\n    setDialogVisible(false);\r\n    setName('');\r\n  };\r\n\r\n  return (\r\n    <Modal show={dialogVisible} onHide={() => setDialogVisible(false)}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>New todo list</Modal.Title>\r\n      </Modal.Header>\r\n\r\n      <Modal.Body>\r\n        <Form.Control\r\n          type='text'\r\n          placeholder='Enter name'\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n      </Modal.Body>\r\n\r\n      <Modal.Footer>\r\n        <Button variant='primary' onClick={addListPressed}>\r\n          Create\r\n        </Button>\r\n        <Button variant='secondary' onClick={() => setDialogVisible(false)}>\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import React, { useContext } from 'react';\r\nimport { Navbar, Button, Nav, Container } from 'react-bootstrap';\r\nimport AppContext from '../context/AppContext';\r\n\r\nconst Navigation = () => {\r\n  const appContext = useContext(AppContext);\r\n  const { setDialogVisible } = appContext;\r\n\r\n  return (\r\n    <Navbar variant='dark' bg='primary'>\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <i className='far fa-sticky-note' /> Todo list\r\n        </Navbar.Brand>\r\n        <Nav className='mr-auto'>\r\n          <Button variant='success' onClick={() => setDialogVisible(true)}>\r\n            Add\r\n          </Button>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { createContext, useState } from 'react';\r\n\r\nconst ItemContext = createContext();\r\n\r\nexport const ItemState = props => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const addTask = content => {\r\n    let newId = tasks.length === 0 ? 0 : tasks[tasks.length - 1].id + 1;\r\n    setTasks([...tasks, { id: newId, content: content, checked: false }]);\r\n  };\r\n\r\n  const removeTask = id => {\r\n    setTasks(tasks.filter(task => task.id !== id));\r\n  };\r\n\r\n  const checkTask = (id, checked) => {\r\n    setTasks(\r\n      tasks.map(task => (task.id === id ? { ...task, checked: checked } : task))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ItemContext.Provider\r\n      value={{\r\n        tasks,\r\n        addTask,\r\n        removeTask,\r\n        checkTask\r\n      }}>\r\n      {props.children}\r\n    </ItemContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ItemContext;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport { ListGroup, Form, Button, Row, Col } from 'react-bootstrap';\r\nimport ItemContext from '../context/ItemContext';\r\n\r\nconst Task = props => {\r\n  const itemContext = useContext(ItemContext);\r\n  const { checkTask, removeTask } = itemContext;\r\n  const { task } = props;\r\n\r\n  return (\r\n    <Fragment>\r\n      <ListGroup.Item>\r\n        <Row>\r\n          <Col md='auto' className='my-auto ml-1 pr-0'>\r\n            <Form.Check\r\n              checked={task.checked}\r\n              onChange={e => checkTask(task.id, e.target.checked)}\r\n            />\r\n          </Col>\r\n          <Col align='left' className='m-auto'>\r\n            {task.checked ? <div className='text-muted'>{task.content}</div> : task.content}\r\n          </Col>\r\n          <Col md='auto' className='mr-1'>\r\n            <Button variant='danger' onClick={() => removeTask(task.id)}>\r\n              <i className='fas fa-times' />\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </ListGroup.Item>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { Fragment, useContext, useState } from 'react';\r\nimport { Card, Form, ListGroup, Button, InputGroup } from 'react-bootstrap';\r\nimport Task from './Task';\r\nimport ItemContext from '../context/ItemContext';\r\n\r\nconst TodoItem = props => {\r\n  const itemContext = useContext(ItemContext);\r\n  const { addTask, tasks } = itemContext;\r\n  const { name } = props;\r\n\r\n  const [content, setContent] = useState('');\r\n\r\n  const addTaskPressed = () => {\r\n    if (content !== '') addTask(content);\r\n    setContent('');\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <Card.Header as='h5' className='bg-primary text-white'>\r\n          {name}\r\n        </Card.Header>\r\n\r\n        <Card.Body>\r\n          <InputGroup>\r\n            <Form.Control\r\n              type='text'\r\n              placeholder='Enter a new task'\r\n              value={content}\r\n              onChange={e => setContent(e.target.value)}\r\n            />\r\n            <InputGroup.Append>\r\n              <Button variant='success' onClick={addTaskPressed}>\r\n                Add\r\n              </Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </Card.Body>\r\n\r\n        <ListGroup variant='flush'>\r\n          {tasks.map(task => (\r\n            <Task key={task.id} task={task} />\r\n          ))}\r\n        </ListGroup>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { Fragment, useContext } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport AppContext from '../context/AppContext';\r\nimport { ItemState } from '../context/ItemContext';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoList = () => {\r\n  const appContext = useContext(AppContext);\r\n  const { lists } = appContext;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Row>\r\n        {lists.map(list => (\r\n          <Col sm={4} className='form-group'>\r\n            <ItemState>\r\n              <TodoItem key={list.id} name={list.name} />\r\n            </ItemState>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport { AppState } from './context/AppContext';\nimport Dialog from './components/Dialog';\nimport Navigation from './components/Navigation';\nimport TodoList from './components/TodoList';\nimport { Container } from 'react-bootstrap';\n\nfunction App() {\n  return (\n    <AppState>\n      <Dialog />\n      <Navigation />\n      <Container className='my-3'>\n        <TodoList />\n      </Container>\n    </AppState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}